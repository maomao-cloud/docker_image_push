name: Build Custom Nginx Alpine with WebDAV

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  NGINX_VERSION: 1.25.3  # 这里修改nginx版本
  ALPINE_VERSION: 3.19   # 这里修改alpine版本
  MODULES: webdav-http-module
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Before freeing up disk space
        run: |
          echo "Before freeing up disk space"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
      # 增加可用磁盘空间
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 128
          remove-dotnet: 'true'
          remove-haskell: 'true'
          # 如果空间还是不够用，可以把以下开启，清理出更多空间
          # remove-android: 'true'
          # remove-codeql: 'true'
          build-mount-path: '/var/lib/docker/'
      - name: Restart docker
        run: sudo service docker restart

      - name: Free up disk space complete
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
          

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        run: |
          echo "$ALIYUN_REGISTRY_PASSWORD" | docker login --username ${{ secrets.ALIYUN_REGISTRY_USER }} --password ${{ secrets.ALIYUN_REGISTRY_PASSWORD }} ${{ secrets.ALIYUN_REGISTRY }}
          
          # Build the image with the specified Nginx version and modules
          docker build \
            --build-arg NGINX_VERSION=${NGINX_VERSION} \
            --build-arg ALPINE_VERSION=${ALPINE_VERSION} \
            --build-arg MODULES="${MODULES}" \
            -f docker/nginx-webdav \
            -t ${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAME_SPACE }}/nginx-alpine-webdav:${NGINX_VERSION}-alpine${ALPINE_VERSION} .
            
          
          # docker push ${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAME_SPACE }}/nginx-alpine-webdav:${NGINX_VERSION}-alpine${ALPINE_VERSION}