#
# NOTE: THIS DOCKERFILE IS REGENERATED WITHOUT DEPENDENCY ON update.sh
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#
FROM nginx:1.26.3-alpine-slim
# Set variables at the top
ENV ALPINE_VERSION 3.20
ENV DEBIAN_VERSION bookworm
ENV NGINX_VERSION 1.26.3
ENV NJS_VERSION 0.8.9
ENV NJS_RELEASE 1
ENV OTEL_VERSION 0.1.1
ENV PKG_RELEASE 1
ENV DYNPKG_RELEASE 2
ENV PACKAGEREPO https://nginx.org/packages/alpine/
# 修改 PACKAGES，移除 nginx-module-webdav
ENV PACKAGES=" \
        nginx=${NGINX_VERSION}-r${PKG_RELEASE} \
        nginx-module-xslt=${NGINX_VERSION}-r${DYNPKG_RELEASE} \
        nginx-module-geoip=${NGINX_VERSION}-r${DYNPKG_RELEASE} \
        nginx-module-image-filter=${NGINX_VERSION}-r${DYNPKG_RELEASE} \
        nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE} \
    "
ENV REVISION ${NGINX_VERSION}-${PKG_RELEASE}
ENV PKGOSSCHECKSUM 3a4e869eded0c71e92f522e94edffea7fbfb5e78886ea7e484342fa2e028c62099a67d08860c249bf93776da97b924225e0d849dbb4697b298afe5421d7d6fea
# 修改 BUILDTARGET，移除 module-webdav
ENV BUILDTARGET "module-geoip module-image-filter module-njs module-xslt"

# 添加手动编译 nginx-module-webdav 的步骤
RUN set -x \
    && apkArch="$(cat /etc/apk/arch)" \
    && nginxPackages="$PACKAGES" \
    # install prerequisites for public key and pkg-oss checks
    && apk add --no-cache --virtual .checksum-deps \
        openssl \
    && case "$apkArch" in \
        x86_64|aarch64) \
            # arches officially built by upstream
            apk add -X "$PACKAGEREPO/v$(egrep -o '^[0-9]+\.[0-9]+' /etc/alpine-release)/main" --no-cache $nginxPackages \
            ;; \
        *) \
            # we're on an architecture upstream doesn't officially build for
            # let's build binaries from the published packaging sources
            set -x \
            && tempDir="$(mktemp -d)" \
            && chown nobody:nobody $tempDir \
            && apk add --no-cache --virtual .build-deps \
                gcc \
                libc-dev \
                make \
                openssl-dev \
                pcre2-dev \
                zlib-dev \
                linux-headers \
                libxslt-dev \
                gd-dev \
                geoip-dev \
                libedit-dev \
                bash \
                alpine-sdk \
                findutils \
                curl \
            && su nobody -s /bin/sh -c " \
                export HOME=${tempDir} \
                && cd ${tempDir} \
                && curl -f -L -O https://github.com/nginx/pkg-oss/archive/${REVISION}.tar.gz \
                && PKGOSSCHECKSUM=\"$PKGOSSCHECKSUM *${REVISION}.tar.gz\" \
                && if [ \"\$(openssl sha512 -r ${REVISION}.tar.gz)\" = \"\$PKGOSSCHECKSUM\" ]; then \
                    echo \"pkg-oss tarball checksum verification succeeded!\"; \
                else \
                    echo \"pkg-oss tarball checksum verification failed!\"; \
                    exit 1; \
                fi \
                && tar xzvf ${REVISION}.tar.gz \
                && cd pkg-oss-${REVISION} \
                && cd alpine \
                && make $BUILDTARGET \
                && apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk \
                && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz \
                " \
            && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/ \
            && apk del --no-network .build-deps \
            && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages \
            ;; \
    esac \
    # remove checksum deps
    && apk del --no-network .checksum-deps \
    # if we have leftovers from building, let's purge them (including extra, unnecessary build deps)
    && if [ -n "$tempDir" ]; then rm -rf "$tempDir"; fi \
    && if [ -f "/etc/apk/keys/abuild-key.rsa.pub" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi \
    # 手动编译 nginx-module-webdav
    && apk add --no-cache --virtual .webdav-build-deps \
        gcc \
        libc-dev \
        make \
        openssl-dev \
        pcre2-dev \
        zlib-dev \
        linux-headers \
    && wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \
    && tar -xzvf nginx-${NGINX_VERSION}.tar.gz \
    && cd nginx-${NGINX_VERSION} \
    && ./configure --with-http_dav_module \
    && make modules \
    && mkdir -p /etc/nginx/modules \
    && cp objs/ngx_http_dav_module.so /etc/nginx/modules/ \
    && cd .. \
    && rm -rf nginx-${NGINX_VERSION} nginx-${NGINX_VERSION}.tar.gz \
    && apk del --no-network .webdav-build-deps \
    # Bring in curl and ca-certificates to make registering on DNS SD easier
    && apk add --no-cache curl ca-certificates