#
# NOTE: THIS DOCKERFILE IS REGENERATED WITHOUT DEPENDENCY ON update.sh
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#
FROM nginx:1.26.3-alpine-slim
# Set variables at the top
ENV ALPINE_VERSION 3.20
ENV DEBIAN_VERSION bookworm
ENV NGINX_VERSION 1.26.3
ENV NJS_VERSION 0.8.9
ENV NJS_RELEASE 1
ENV OTEL_VERSION 0.1.1
ENV PKG_RELEASE 1
ENV DYNPKG_RELEASE 2
ENV PACKAGEREPO https://nginx.org/packages/alpine/
# 添加 nginx-module-webdav
ENV NGINX_DAV_EXT_MODULE_VERSION 3.0.0
ENV NGINX_DAV_EXT_MODULE_URL https://github.com/arut/nginx-dav-ext-module/archive/refs/tags/v${NGINX_DAV_EXT_MODULE_VERSION}.tar.gz
ENV PACKAGES=" \
        nginx=${NGINX_VERSION}-r${PKG_RELEASE} \
        nginx-module-xslt=${NGINX_VERSION}-r${DYNPKG_RELEASE} \
        nginx-module-geoip=${NGINX_VERSION}-r${DYNPKG_RELEASE} \
        nginx-module-image-filter=${NGINX_VERSION}-r${DYNPKG_RELEASE} \
        nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE} \
    "
ENV REVISION ${NGINX_VERSION}-${PKG_RELEASE}
ENV PKGOSSCHECKSUM 3a4e869eded0c71e92f522e94edffea7fbfb5e78886ea7e484342fa2e028c62099a67d08860c249bf93776da97b924225e0d849dbb4697b298afe5421d7d6fea
# 添加 module-webdav 到 BUILDTARGET 中
ENV BUILDTARGET "module-geoip module-image-filter module-njs module-xslt module-webdav"

RUN set -x \
    && apkArch="$(cat /etc/apk/arch)" \
    && nginxPackages="$PACKAGES" \
    && apk add --no-cache --virtual .checksum-deps openssl \
    && tempDir="$(mktemp -d)" \
    && chown nobody:nobody $tempDir \
    && apk add --no-cache --virtual .build-deps \
        gcc \
        libc-dev \
        make \
        openssl-dev \
        pcre2-dev \
        zlib-dev \
        linux-headers \
        libxslt-dev \
        gd-dev \
        geoip-dev \
        libedit-dev \
        bash \
        alpine-sdk \
        findutils \
        curl \
    # 下载并解压 WebDAV 扩展模块
    && curl -f -L -O $NGINX_DAV_EXT_MODULE_URL \
    && tar xzvf v${NGINX_DAV_EXT_MODULE_VERSION}.tar.gz \
    && echo "下载并解压WebDAV： ${NGINX_DAV_EXT_MODULE_URL}" \
    && su nobody -s /bin/sh -c " \
        export HOME=${tempDir} \
        && cd ${tempDir} \
        && curl -f -L -O https://github.com/nginx/pkg-oss/archive/${REVISION}.tar.gz \
        && PKGOSSCHECKSUM=\"$PKGOSSCHECKSUM *${REVISION}.tar.gz\" \
        && if [ \"\$(openssl sha512 -r ${REVISION}.tar.gz)\" = \"\$PKGOSSCHECKSUM\" ]; then \
            echo \"pkg-oss tarball checksum verification succeeded!\"; \
        else \
            echo \"pkg-oss tarball checksum verification failed!\"; \
            exit 1; \
        fi \
        && tar xzvf ${REVISION}.tar.gz \
        && cd pkg-oss-${REVISION} \
        && cd alpine \
        && NGINX_SRC=\$(find / -name \"nginx-${NGINX_VERSION}\" -type d) \
        && if [ -z \"\$NGINX_SRC\" ]; then \
            curl -f -L -O http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz \
            && tar xzvf nginx-${NGINX_VERSION}.tar.gz \
            && NGINX_SRC=\"\$(pwd)/nginx-${NGINX_VERSION}\"; \
        fi \
        && cd \$NGINX_SRC \
        && ./configure --add-module=${tempDir}/nginx-dav-ext-module-${NGINX_DAV_EXT_MODULE_VERSION} \
        && make modules \
        && mkdir -p ${tempDir}/packages/alpine/${apkArch} \
        && cp objs/*.so ${tempDir}/packages/alpine/${apkArch}/ \
        && apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk \
        && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz \
    " \
        && make $BUILDTARGET || { echo \"Make failed\"; exit 1; } \
        && apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk \
        && abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz \
        " \
    && cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/ \
    && apk del --no-network .build-deps \
    && apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages \
# remove checksum deps
    && apk del --no-network .checksum-deps \
# if we have leftovers from building, let's purge them (including extra, unnecessary build deps)
    && if [ -n "$tempDir" ]; then rm -rf "$tempDir"; fi \
    && if [ -f "/etc/apk/keys/abuild-key.rsa.pub" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi \
# Bring in curl and ca-certificates to make registering on DNS SD easier
    && apk add --no-cache curl ca-certificates