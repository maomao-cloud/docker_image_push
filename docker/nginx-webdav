# 使用多阶段构建减少镜像体积
# 第一阶段：编译环境
FROM alpine:3.20 as builder

# 安装编译依赖
RUN apk add --no-cache \
    build-base \
    linux-headers \
    pcre-dev \
    openssl-dev \
    zlib-dev \
    expat-dev \
    curl \
    git

# 设置 Nginx 版本
ARG NGINX_VERSION=1.27.4

# 下载并解压 Nginx 源码
RUN curl -O https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \
    tar -zxvf nginx-${NGINX_VERSION}.tar.gz

# 克隆 WebDAV 扩展模块仓库
RUN git clone https://github.com/arut/nginx-dav-ext-module.git

# 编译配置
RUN cd nginx-${NGINX_VERSION} && \
    ./configure \
        --prefix=/etc/nginx \
        --sbin-path=/usr/sbin/nginx \
        --modules-path=/usr/lib/nginx/modules \
        --conf-path=/etc/nginx/nginx.conf \
        --error-log-path=/var/log/nginx/error.log \
        --http-log-path=/var/log/nginx/access.log \
        --pid-path=/var/run/nginx.pid \
        --lock-path=/var/run/nginx.lock \
        --with-http_ssl_module \
        --with-http_realip_module \
        --with-http_gzip_static_module \
        --with-threads \
        --with-file-aio \
        --with-http_dav_module \
        --add-module=../nginx-dav-ext-module \
        --with-cc-opt='-Os -fomit-frame-pointer' \
        --with-ld-opt=-Wl,--as-needed

# 编译并安装
RUN cd nginx-${NGINX_VERSION} && \
    make && \
    make install

# 第二阶段：运行时环境
FROM alpine:3.20

# 安装运行时依赖
RUN apk add --no-cache \
    pcre \
    openssl \
    zlib \
    expat

# 从构建阶段复制文件
COPY --from=builder /usr/sbin/nginx /usr/sbin/nginx
COPY --from=builder /etc/nginx /etc/nginx
COPY --from=builder /var/log/nginx /var/log/nginx

# 创建必要目录
RUN mkdir -p /var/cache/nginx && \
    touch /var/run/nginx.pid && \
    adduser -D nginx

# 设置权限
RUN chown -R nginx:nginx \
    /var/log/nginx \
    /var/cache/nginx \
    /var/run/nginx.pid \
    /etc/nginx

# 暴露端口
EXPOSE 80 443

# 容器启动命令
CMD ["nginx", "-g", "daemon off;"]